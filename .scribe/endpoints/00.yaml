name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: chslb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: obraun@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: '1[#;JAiE)jZW,wC2R|'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: chslb
      email: obraun@example.net
      password: '1[#;JAiE)jZW,wC2R|'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": {
                  "name": "New User",
                  "email": "user@example.com",
                  "updated_at": "2024-03-03T11:44:46.000000Z",
                  "created_at": "2024-03-03T11:44:46.000000Z",
                  "id": 329
              },
              "access_token": "1|Ry2kDIQv2AukIHPrzJYFBcwlPshbWbD0wVhJ89sN67d3d573",
              "token_type": "Bearer"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "The email has already been taken. (and 1 more error)",
             "errors": {
                 "email": [
                     "The email has already been taken."
                 ],
                 "password": [
                     "The password field confirmation does not match."
                 ]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: aschneider@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: laboriosam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: aschneider@example.net
      password: laboriosam
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "access_token": "2|exaniUODY4PqGbYRHT4VX5aWSe5RiWhLJCJEEghF198cc3b6",
              "token_type": "Bearer"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "The email field must be a valid email address.",
             "errors": {
                 "email": [
                     "The email field must be a valid email address."
                 ]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      title:
        name: title
        description: ''
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'user_ids[]':
        name: 'user_ids[]'
        description: ''
        required: true
        example: '12'
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      title: quaerat
      status: qui
      'user_ids[]': '12'
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_ids:
        name: user_ids
        description: ''
        required: false
        example:
          - 18
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      '[]':
        name: '[]'
        description: ''
        required: false
        example:
          - quos
        type: '[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      - quos
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": [
                 {
                     "id": 174,
                     "title": "Task 1",
                     "description": "Important task",
                     "status": "pending",
                     "created_at": "2024-03-03T12:13:23.000000Z",
                     "users": [
                         {
                             "id": 320,
                             "name": "Dino Hane I"
                         },
                         {
                             "id": 321,
                             "name": "Sedrick Johnston"
                         }
                     ]
                 }
             ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
             "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Adipisci et dolor maxime ea consequatur explicabo.'
        type: 'string (nullable)'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: in
        type: string
        enumValues:
          - pending
          - in
          - completed
        exampleWasSpecified: false
        custom: []
      user_ids:
        name: user_ids
        description: ''
        required: true
        example:
          - 12
          - 34
          - 56
        type: 'array of integers'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: incidunt
      description: 'Adipisci et dolor maxime ea consequatur explicabo.'
      status: in
      user_ids:
        - 12
        - 34
        - 56
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "data": {
                 "id": 174,
                 "title": "Task 1",
                 "description": "Important task",
                 "status": "pending",
                 "created_at": "2024-03-03T12:13:23.000000Z",
                 "users": [
                     {
                         "id": 320,
                         "name": "Dino Hane I"
                     },
                     {
                         "id": 321,
                         "name": "Sedrick Johnston"
                     }
                 ]
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
             "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "The selected user_ids.0 is invalid. (and 1 more error)",
             "errors": {
                 "user_ids.0": [
                     "The selected user_ids.0 is invalid."
                 ],
                 "user_ids.1": [
                     "The selected user_ids.1 is invalid."
                 ]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 174
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 174
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Suscipit excepturi facere et similique dolor.'
        type: 'string (nullable)'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: pending
        type: string
        enumValues:
          - pending
          - in
          - completed
        exampleWasSpecified: false
        custom: []
      user_ids:
        name: user_ids
        description: ''
        required: true
        example:
          - 12
          - 34
          - 56
        type: 'array of integers'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: sit
      description: 'Suscipit excepturi facere et similique dolor.'
      status: pending
      user_ids:
        - 12
        - 34
        - 56
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "id": 175,
                 "title": "Updated task 3 from API!",
                 "description": "Updated description",
                 "status": "completed",
                 "created_at": "2024-03-03T12:16:54.000000Z",
                 "users": [
                     {
                         "id": 320,
                         "name": "Dino Hane I"
                     }
                 ]
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
             "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Task with given id does not exist!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "The selected user_ids.0 is invalid.",
             "errors": {
                 "user_ids.0": [
                     "The selected user_ids.0 is invalid."
                 ]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 174
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 174
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: ''
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
             "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Task with given id does not exist!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
